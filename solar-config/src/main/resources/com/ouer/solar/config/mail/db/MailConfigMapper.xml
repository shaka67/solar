<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ouer.solar.config.mail.db.MailConfigMapper">
	
	<resultMap id="mail_config" type="com.ouer.solar.config.mail.MailConfig">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="app_id" property="appId" jdbcType="VARCHAR" />
		<result column="protocol" property="protocol" jdbcType="VARCHAR" />
		<result column="smtp_host" property="smtpHost" jdbcType="VARCHAR" />
		<result column="smtp_port" property="smtpPort" jdbcType="INTEGER" />
		<result column="smtp_props" property="smtpProps" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="personal" property="personal" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		app_id, protocol, smtp_host, smtp_port, smtp_props, username, password, personal
	</sql>
	
	<insert id="insert" parameterType="com.ouer.solar.config.mail.MailConfig"
		useGeneratedKeys="true" keyProperty="id">
		insert into mail_config (
		app_id, protocol, smtp_host, smtp_port, smtp_props, username, password, personal, created_at, updated_at
		)
		values (
		#{appId}, #{protocol}, #{smtpHost}, #{smtpPort}, #{smtpProps}, #{username}, #{password}, #{personal},
		now(),
		now()
		)
	</insert>
	
	<update id="update" parameterType="com.ouer.solar.config.mail.MailConfig">
		update mail_config
		<set>
			<if test="protocol != null">
				protocol = #{protocol}, 
			</if>
			<if test="smtpHost != null">
				smtp_host = #{smtpHost}, 
			</if>
			<if test="smtpPort != 0">
				smtp_port = #{smtpPort}, 
			</if>
			<if test="smtpProps != null">
				smtp_props = #{smtpProps}, 
			</if>
			<if test="username != null">
				username = #{username}, 
			</if>
			<if test="password != null">
				password = #{password}, 
			</if>
			<if test="personal != null">
				personal = #{personal}, 
			</if>
			updated_at = now()
		</set>
		where app_id = #{appId}
	</update>
	
	<select id="select" resultMap="mail_config">
		select <include refid="Base_Column_List"/> from mail_config where app_id = #{appId}
	</select>
	
	<select id="exists" resultType="boolean">
    	<![CDATA[ select count(*)  from mail_config where app_id = #{appId} ]]>
	</select> 
	
	<delete id="delete">
    	delete from mail_config where app_id = #{appId}
  	</delete>
</mapper>