<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ouer.solar.config.image.db.ImageConfigMapper">
	
	<resultMap id="image_config" type="com.ouer.solar.config.image.ImageConfig">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="app_id" property="appId" jdbcType="VARCHAR" />
		<result column="thirdparty" property="thirdparty" jdbcType="VARCHAR" />
		<result column="access_key" property="accessKey" jdbcType="VARCHAR" />
		<result column="secret_key" property="secretKey" jdbcType="INTEGER" />
		<result column="namespace" property="namespace" jdbcType="VARCHAR" />
		<result column="store_config" property="storeConfig" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		app_id, thirdparty, access_key, secret_key, namespace, store_config
	</sql>
	
	<insert id="insert" parameterType="com.ouer.solar.config.image.ImageConfig"
		useGeneratedKeys="true" keyProperty="id">
		insert into image_config (
		app_id, thirdparty, access_key, secret_key, namespace, store_config, created_at, updated_at
		)
		values (
		#{appId}, #{thirdparty}, #{accessKey}, #{secretKey}, #{namespace}, #{storeConfig}, 
		now(),
		now()
		)
	</insert>
	
	<update id="update" parameterType="com.ouer.solar.config.mail.MailConfig">
		update image_config
		<set>
			<if test="thirdparty != null">
				thirdparty = #{thirdparty}, 
			</if>
			<if test="accessKey != null">
				access_key = #{accessKey}, 
			</if>
			<if test="secretKey != null">
				secret_key = #{secretKey}, 
			</if>
			<if test="namespace != null">
				namespace = #{namespace}, 
			</if>
			<if test="storeConfig != null">
				store_config = #{storeConfig}, 
			</if>
			updated_at = now()
		</set>
		where app_id = #{appId}
	</update>
	
	<select id="select" resultMap="image_config">
		select <include refid="Base_Column_List"/> from image_config where app_id = #{appId}
	</select>
	
	<select id="exists" resultType="boolean">
    	<![CDATA[ select count(*)  from image_config where app_id = #{appId} ]]>
	</select> 
	
	<delete id="delete">
    	delete from image_config where app_id = #{appId}
  	</delete>
  	
  	<select id="selectAll" resultMap="image_config">
		select <include refid="Base_Column_List"/> from image_config
	</select>
</mapper>